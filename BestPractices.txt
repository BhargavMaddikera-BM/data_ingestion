Key Points and Best Practices:

Architecture Patterns:

1) J2EE Architecture Pattern with layers of web, service, dao, vo, utlity and external integration modules
2) Service Oriented Architecture - REST
3) Service Oriented Architecture - Web Services
4) Data Streaming Pattern including Publish Subscribe Pattern
5) Pipe and Filter Pattern
6) Client Server Pattern
7) Peer to Peer Pattern

Key Technologies/Libraries/Frameworks:

1) Java 8
2) Apache Kafka 2.7
3) Spring Boot 2.2
4) javax.ws.rs
5) Apache Zookeeper 3.6.2

Others:

1) used javax.ws.rs for making a call to https://api.github.com/events
2) Apache Kafka with Zookeeper
   Topic name is github_events_topic
   Producer
   Consumer
   Custom Serializer and Custom DeSerializer
3) Reading from external properties file wherever possible w.r.t configuration parameters/properties
4) Application can be launched via java -jar app-web-0.0.1-SNAPSHOT.jar com.teikametrics.AppWebApplication from command prompt
5) For Caching, used a simple static variable. would have used Hazelcast In Memory Datagrid if implemented in real
6) Used Log4j for logging 
7) Used Custom Defined Exception Entities(Checked and Runtime)


